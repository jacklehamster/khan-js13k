function expand(series){const expanded=new Array(Math.ceil(series.length*2));for(let i=0;i<series.length;i++){expanded[i*2]=series[i]%16;expanded[i*2+1]=(series[i]>>4)%16}return expanded}function decodeLine(result){const line=[0,0];let x=0,y=0;do{x=result.pop()-7;y=result.pop()-7;line[0]+=x;line[1]+=y}while(x||y);let prex,prey;do{x=result.pop()-7;y=result.pop()-7;if(x||y){const ratio1=prex*y;const ratio2=prey*x;if(Math.abs(ratio1-ratio2)<5){line[line.length-2]+=x;line[line.length-1]+=y}else{line.push(line[line.length-2]+x,line[line.length-1]+y)}prex=x;prey=y}}while(x||y);return line}function decodeLines(result,precision){const lines=new Array(result.pop());for(let i=0;i<lines.length;i++){lines[i]=decodeLine(result).map(value=>value*precision)}return lines}function decodeString(result){const len=result.pop();const array=[];for(let j=0;j<len;j++){const ch=result.pop()+(result.pop()<<4);array.push(String.fromCharCode(ch))}return array.join("")}function decodeShapes(result,precision){const shapes=new Array(result.pop());for(let i=0;i<shapes.length;i++){shapes[i]={};shapes[i].name=decodeString(result);shapes[i].lines=decodeLines(result,precision);shapes[i].anim=result.pop();const p=result.pop();shapes[i].hidden=p===1}return shapes}function decodeAnimations(result){const animations=new Array(result.pop());for(let i=0;i<animations.length;i++){animations[i]=decodeString(result)}return animations}function decodeShape(reduced){const result=expand(reduced);const root={};result.reverse();const precision=result.pop();root.animations=decodeAnimations(result);root.shapes=decodeShapes(result,precision);return root}let q=document.querySelector.bind(document);let canvas=q("canvas");let ctx=canvas.getContext("2d");let cs=canvas.style;canvas.width=1600;cs.width="800px";canvas.height=1e3;cs.height="500px";cs.border="1px solid black";cs.backgroundColor="#efd";const keys={};document.addEventListener("keyup",e=>{delete keys[e.code]});document.addEventListener("keydown",e=>{keys[e.code]=true});const sh=[0,0];function load_binary_resource(url){const byteArray=[];const req=new XMLHttpRequest;req.open("GET",url,false);req.overrideMimeType("text/plain; charset=x-user-defined");req.send(null);if(req.status===200){for(let i=0;i<req.responseText.length;++i){byteArray.push(req.responseText.charCodeAt(i)&255)}}return byteArray}let root;document.addEventListener("DOMContentLoaded",()=>{const byteArray=load_binary_resource("rider.13k");root=decodeShape(byteArray);console.log(root);loop(0)});const srcWidth=1600;const srcHeight=1e3;let random=30;function showFrame(x,y,w,h,frame,anim,color,ddy){const mulW=w/srcWidth;const mulH=h/srcHeight;ctx.fillStyle=color??black;root.shapes.forEach(shape=>{if(shape.hidden||shape.anim!==anim){return}const ll=shape.lines[frame%shape.lines.length];if(ll){ctx.beginPath();moveTo(x,y,ll[0]*mulW,ll[1]*mulH,false,w,h,ddy);for(let i=2;i<ll.length;i+=2){moveTo(x,y,ll[i]*mulW,ll[i+1]*mulH,true,w,h,ddy)}ctx.closePath();ctx.fill()}})}function moveTo(offsetX,offsetY,x,y,penDown,w,h,ddy){if(penDown){ctx.lineTo(offsetX+x,offsetY+y+(x/w-.5)*5*ddy)}else{ctx.moveTo(offsetX+x,offsetY+y+(x/w-.5)*5*ddy)}}const threshold=1;let arrowSize=0;const arrows=[];function shootArrow(sprite){const{x,y,dx,dy,archerOrientation}=sprite;if(arrowSize>=arrows.length){arrows.push({})}arrows[arrowSize].x=x;arrows[arrowSize].y=y-100;arrows[arrowSize].dx=archerOrientation*50+dx;arrows[arrowSize].dy=-3;arrows[arrowSize].born=sprite.time;arrowSize++}const sprite={parent:true,time:0,lastShot:0,process:sprite=>{if(!sprite.parent){return}const ax=evaluate(sprite.ax,sprite);const ay=evaluate(sprite.ay,sprite);const da=Math.sqrt(ax*ax+ay*ay);if(ax!==0){sprite.orientation=ax}const speed=evaluate(sprite.speed,sprite);const brake=sprite.brake;if(da){sprite.dx=(sprite.dx+ax/da*speed)*brake;sprite.dy=(sprite.dy+ay/da*speed/2)*brake}else{sprite.dx=sprite.dx*brake;sprite.dy=sprite.dy*brake}if(evaluate(sprite.moving,sprite)){sprite.x+=sprite.dx;sprite.y+=sprite.dy}const dist=Math.sqrt(sprite.dx*sprite.dx+sprite.dy*sprite.dy);sprite.horseFrame+=Math.max(.08,dist/50);const shooting=evaluate(sprite.shooting,sprite);if(!shooting){sprite.archerOrientation=sprite.orientation}else{if(sprite.time-sprite.lastShot>evaluate(sprite.shootPeriod,sprite)){shootArrow(sprite);sprite.lastShot=sprite.time}}},shootPeriod:300,archerOrientation:1,orientation:1,direction:undefined,brake:.99,speed:.1,x:300,y:500,moving:sprite=>Math.abs(sprite.dx)>threshold||Math.abs(sprite.dy)>threshold,shooting:()=>keys.Space,ax:()=>(keys.KeyA||keys.ArrowLeft?-1:0)+(keys.KeyD||keys.ArrowRight?1:0),ay:()=>(keys.KeyW||keys.ArrowUp?-1:0)+(keys.KeyS||keys.ArrowDown?1:0),dx:0,dy:0,width:250,height:200,hotspot:undefined,born:0,animation:undefined,range:undefined,color:undefined,horseFrame:0,sprites:[sprite=>evaluate({...sprite,parent:false,sprites:undefined,animation:"archer",range:sprite=>evaluate(sprite.shooting,sprite)?[0,4]:[0],hotspot:[sprite=>evaluate(sprite.moving,sprite)?.5-sprite.orientation*sprite.archerOrientation*.05:.53,sprite=>evaluate(sprite.moving,sprite)?.65+Math.sin(sprite.horseFrame*.7)/100:.7],color:"black",direction:sprite=>Math.sign(sprite.archerOrientation),frame:sprite=>evaluate(sprite.horseFrame,sprite)},sprite),sprite=>evaluate({...sprite,parent:false,sprites:undefined,animation:"horse",range:sprite=>evaluate(sprite.moving,sprite)?[0,10]:[11],hotspot:[.47,.72],color:"#630",direction:sprite=>Math.sign(sprite.orientation),frame:sprite=>evaluate(sprite.horseFrame,sprite)},sprite),sprite=>evaluate({...sprite,parent:false,sprites:undefined,animation:"horse",range:sprite=>evaluate(sprite.moving,sprite)?[0,10]:[11],hotspot:[.47,.72],color:"#888",direction:sprite=>Math.sign(sprite.orientation),height:-50,frame:sprite=>evaluate(sprite.horseFrame,sprite)},sprite)]};function evaluate(value,sprite){if(typeof value==="object"){if(Array.isArray(value)){return value.map(v=>evaluate(v,sprite))}else{const o={};for(let i in value){o[i]=evaluate(value[i],sprite)}return o}}return typeof value==="function"?value(sprite):value}function showSprite(sprite,time){sprite.dt=time-sprite.time;sprite.time=time;const sprites=evaluate(sprite.sprites,sprite);sprites.forEach(sprite=>{const{x,y,width,height,animation,born,horseFrame,range,hotspot,color,direction,dy}=sprite;const frame=range[0]+(range.length<=1?0:Math.floor(horseFrame)%(range[1]-range[0]));const anim=root.animations.indexOf(animation);const dir=evaluate(direction,sprite);const ddy=evaluate(dy,sprite);showFrame(x-hotspot[0]*width*dir-sh[0],y-hotspot[1]*height-sh[1],width*dir,height,frame,anim,color,ddy)})}let headStart=0;function loop(time){requestAnimationFrame(loop);ctx.clearRect(0,0,canvas.width,canvas.height);ctx.strokeStyle="#038";ctx.lineWidth=6;for(let i=0;i<arrowSize;i++){const arrow=arrows[i];ctx.beginPath();const arrowSize=50;const dist=Math.sqrt(arrow.dx*arrow.dx+arrow.dy*arrow.dy);ctx.moveTo(arrow.x-sh[0],arrow.y-sh[1]);ctx.lineTo(arrow.x-sh[0]-arrow.dx/dist*arrowSize,arrow.y-sh[1]-arrow.dy/dist*arrowSize);ctx.stroke();arrow.dy+=.3;arrow.x+=arrow.dx;arrow.y+=arrow.dy}for(let i=arrowSize-1;i>=0;i--){if(time-arrows[i].born>500){arrows[i]=arrows[arrowSize-1];arrowSize--}}ctx.strokeStyle="#380";ctx.lineWidth=2;drawGround();showSprite(sprite,time);headStart+=((sprite.dx*sprite.archerOrientation<0?0:sprite.dx)/2+sprite.archerOrientation*2-headStart)*.05;sh[0]+=(sprite.x+headStart*80-canvas.width/2-sh[0])*.1;sh[1]+=(sprite.y+sprite.dy*50-canvas.height/2-sh[1])*.1}function drawGround(){const spacing=200;ctx.beginPath();const cell=[Math.round(sh[0]/spacing),Math.round(sh[1]/spacing)];for(let y=-20;y<20;y++){for(let x=-20;x<20;x++){const xx=x+cell[0];const yy=y+cell[1];const diffx=Math.sin(xx*123+yy*9991);const diffy=Math.cos(xx*12331+yy*2221);const zx=diffx*500;const zy=diffy*200;ctx.moveTo(xx*spacing-sh[0]+zx,yy*spacing-sh[1]+zy);ctx.lineTo(xx*spacing+diffx*100-sh[0]+zx,yy*spacing-sh[1]+zy+3);ctx.lineTo(xx*spacing+diffx*100-sh[0]+zx+diffy*100,yy*spacing-sh[1]+zy)}}ctx.stroke()}